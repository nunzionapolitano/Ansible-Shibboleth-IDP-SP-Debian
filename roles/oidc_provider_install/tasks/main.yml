- name: "Stat oidc_extension_plugin_archive"
  stat: path="{{ shib_dest_dir }}/{{ oidc_extension_plugin_archive }}"
  register: "oidc_extension_plugin_archive_path"

- name: "Download OIDC plugin {{ oidc_extension_plugin_archive }}"
  get_url: url={{ oidc_extension_plugin_url }} dest="{{ shib_dest_dir }}/{{ oidc_extension_plugin_archive }}"
  when: oidc_extension_plugin_archive_path.stat.exists == False

# - name: Unarchive Shibboleth IdP
  # unarchive: src="{{ shib_dest_dir }}/{{ oidc_extension_plugin_archive }}" dest="{{ shib_dest_dir }}" copy=no
  # without copy=no means that src= should be on a localpath. Then file will be uploadade and unarchived

- name: "Unarchive OIDC plugin {{ oidc_extension_plugin_archive }}"
  shell: "cd {{ idp_path }} && tar -xf {{ shib_dest_dir }}/{{ oidc_extension_plugin_archive }} --strip-components=1"

- name: get JAVA_HOME
  shell: readlink -f /usr/bin/java | sed "s:bin/java::"
  register: java_home

- name: Install Shibboleth Idp OIDC Extensions
  environment:
    JAVA_HOME: "{{ java_home.stdout }}"
  command: '{{ idp_path }}/bin/build.sh \
            -Didp.target.dir="{{ idp_path }}"'

- name: Create GIT repository with a fresh ShibIdP installation
  shell: "cd {{ idp_path }} && git add -A && git commit -am 'Shibboleth IdP OIDC Extension installed'"
