- name: "Check what Java version is installed and store the result on 'java_version' ansible variable"
  shell: java -version 2>&1 | grep -i version | sed 's/.*version ".*\.\(.*\)\..*"/\1/; 1q'
  register: java_version
  changed_when: false
  tags: jetty

- name: "Create 'jetty' group"
  group:
   name: "jetty"
   state: present
  tags: jetty

- name: "Create 'jetty' user"
  user:
   name: "jetty"
   groups: "jetty"
   createhome: "no"
  tags: jetty

- name: Stat Jetty tarball in /opt
  stat: path="{{ jetty_dl_path }}/{{ jetty_pkg }}"
  register: jetty_tarball

- name: "Download Jetty {{ jetty_version }}"
  get_url: url={{ jetty_dl_url }} dest={{ jetty_dl_path }}
  when: jetty_tarball.stat.exists == False

- name: "Extract Jetty Package"
  unarchive:
   src: "{{ jetty_dl_path }}/{{ jetty_pkg }}"
   dest: "/usr/local/src"
   owner: "jetty"
   group: "jetty"
  tags: jetty

- name: "Create 'jetty-src' link"
  file:
   src: "{{ item.src }}"
   dest: "{{ item.dest }}"
   owner: "jetty"
   group: "jetty"
   state: link
  with_items:
   - { src: '/usr/local/src/{{ jetty_distribution }}' , dest: '/usr/local/src/jetty-src' }
  register: jetty_src
  tags: jetty

- name: "Create '/etc/init.d/jetty' link"
  file:
   src: "{{ item.src }}"
   dest: "{{ item.dest }}"
   owner: "jetty"
   group: "jetty"
   state: link
  with_items:
   - { src: '/usr/local/src/jetty-src/bin/jetty.sh' , dest: '/etc/init.d/jetty' }
  tags: jetty

- name: "Create Jetty's directories"
  file:
   path: "{{ item }}"
   owner: "jetty"
   group: "jetty"
   state: directory
  with_items:
   - "{{ jetty_path }}"
   - "{{ jetty_path }}/etc"
   - "{{ jetty_path }}/lib"
   - "{{ jetty_path }}/lib/ext"
   - "{{ jetty_path }}/logs"
   - "{{ jetty_path }}/resources"
   - "{{ jetty_path }}/webapps"
   - "{{ jetty_path }}/tmp"
   - /var/log/jetty
  tags: jetty

- name: "Configure Jetty"
  template:
   src: "{{ item.src }}"
   dest: "{{ item.dest }}"
   owner: "jetty"
   group: "jetty"
  with_items:
   - { src: "files/java/jetty", dest: '/etc/default/jetty' }
   - { src: "files/java/start.ini", dest: '{{ jetty_path }}/start.ini' }
   # - { src: "files/java/jetty.xml", dest: '{{ jetty_path }}/etc/jetty.xml' }
  tags: jetty

- name: "Installing additional JARS"
  copy:
   src: "{{ item.src }}"
   dest: "{{ item.dest }}"
   owner: "jetty"
   group: "jetty"
  with_items:
   - { src: "files/java/javax.json-api-1.1.4.jar" , dest: '{{ jetty_path }}/lib/ext/javax.json-api-1.1.4.jar' }
   - { src: "files/java/javax.json-1.1.4.jar" , dest: '{{ jetty_path }}/lib/ext/javax.json-1.1.4.jar' }
  tags: jetty

- name: Enable jetty libs
  file:
   src: "{{ item.src }}"
   dest: "{{ item.dest }}"
   state: link
  with_items:
   - { src: '/usr/share/java/mariadb-java-client.jar' , dest: '{{ jetty_path }}/lib/ext/mariadb-java-client.jar' }
   - { src: '/usr/share/java/commons-pool.jar' , dest: '{{ jetty_path }}/lib/ext/commons-pool.jar' }
   - { src: '/usr/share/java/commons-dbcp.jar' , dest: '{{ jetty_path }}/lib/ext/commons-dbcp.jar' }
  tags: jetty

- set_fact:
     servlet_port: 8080

# - name: "Stop jetty after an upgrade of its package"
  # systemd:
   # name: "jetty"
   # state: stopped
  # when:
   # - jetty_src.changed
  # tags: jetty

# - name: "Start jetty by re-reading configs (2.4 and above)"
  # systemd:
   # name: "jetty"
   # daemon_reload: True
   # state: started
   # enabled: True
  # tags: jetty
