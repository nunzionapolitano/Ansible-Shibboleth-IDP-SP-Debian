# - name: "Uninstall and Purge"
  # include_role:
    # name: "uninstall"
  # when: uninstall == 'true'

- name: "Ensures {{ cert_path }} dir exists"
  file: path="{{ cert_path }}" state=directory

- name: Copy certs
  copy:
    src: "{{ item }}"
    dest: "{{ cert_path }}/"
    owner: root
    group: root
    # mode: 640
  with_fileglob:
    - "{{ src_cert_path }}/*"

- name: "Ensures {{ cert_path }}/{{ ldap_cert }} exists"
  stat: path={{ cert_path }}/{{ ldap_cert }}
  register: ldap_cert_ok

- name: "Check {{ cert_path }}/{{ ldap_cert }}"
  fail: msg="{{ cert_path }}/{{ ldap_cert }} doesn't exists!"
  when: not ldap_cert_ok.stat.exists

- name: Update apt cache
  # apt: update_cache=yes
  apt: update_cache=yes cache_valid_time=86400

- name: Install common apt packages
  apt:
      pkg:
        - git
        - wget
        - ntp
        - emacs24-nox
        - vim
        - ca-certificates
        - ldap-utils
      state: present

# /etc/hosts optional definitions
- name: Check that server_ip.yml exists
  stat:
    path: ./server_ip.yml
  register: hosts_file

- name: Include server_ip.yml definitions
  include_vars:
    file: ./server_ip.yml
  when: hosts_file.stat.exists == True

- name: Configure /etc/hosts
  template:
    src: roles/common/templates/hosts
    dest: /etc/hosts
  when: hosts_file.stat.exists == True
# END: /etc/hosts optional definitions

- name: Test if idpuser can query LDAP server
  shell: "ldapsearch -H {{ ldap_url }} -D '{{ ldap_binddn }}' -w {{ idp_secret }}  -b '{{ ldap_basedn }}'"

- name: "Ensures {{ tmp_upload_dir }} dir exists"
  file: path="{{ tmp_upload_dir }}" state=directory
